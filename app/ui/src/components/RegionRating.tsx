import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from './ui/card';
import { Button } from './ui/button';
import { Badge } from './ui/badge';
import { Input } from './ui/input';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { 
  Trophy, 
  Search, 
  Filter,
  TrendingUp,
  TrendingDown,
  Minus,
  MapPin,
  Activity
} from 'lucide-react';

export function RegionRating() {
  const [sortBy, setSortBy] = useState('flights');
  const [searchTerm, setSearchTerm] = useState('');
  const [filterPeriod, setFilterPeriod] = useState('month');

  // –ú–æ–∫-–¥–∞–Ω–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
  const regions = [
    {
      rank: 1,
      name: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      flights: 8420,
      density: 15.2,
      growth: 18.5,
      avgDuration: 2.1,
      peakLoad: 45,
      zeroDays: 2,
      area: 44300
    },
    {
      rank: 2,
      name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      flights: 6150,
      density: 45.8,
      growth: 12.3,
      avgDuration: 1.8,
      peakLoad: 38,
      zeroDays: 0,
      area: 1439
    },
    {
      rank: 3,
      name: '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π',
      flights: 4320,
      density: 5.7,
      growth: -2.1,
      avgDuration: 2.5,
      peakLoad: 28,
      zeroDays: 5,
      area: 75485
    },
    {
      rank: 4,
      name: '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      flights: 3890,
      density: 2.0,
      growth: 8.9,
      avgDuration: 1.9,
      peakLoad: 22,
      zeroDays: 8,
      area: 194307
    },
    {
      rank: 5,
      name: '–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω',
      flights: 3240,
      density: 4.8,
      growth: 15.2,
      avgDuration: 2.0,
      peakLoad: 19,
      zeroDays: 3,
      area: 67847
    },
    {
      rank: 6,
      name: '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      flights: 2890,
      density: 1.6,
      growth: 5.7,
      avgDuration: 2.3,
      peakLoad: 16,
      zeroDays: 12,
      area: 177756
    },
    {
      rank: 7,
      name: '–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      flights: 2150,
      density: 2.4,
      growth: -5.3,
      avgDuration: 1.7,
      peakLoad: 14,
      zeroDays: 18,
      area: 88529
    },
    {
      rank: 8,
      name: '–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å',
      flights: 1980,
      density: 2.0,
      growth: 3.8,
      avgDuration: 2.2,
      peakLoad: 12,
      zeroDays: 15,
      area: 100967
    }
  ];

  const getTrendIcon = (growth: number) => {
    if (growth > 5) return <TrendingUp className="w-4 h-4 text-green-500" />;
    if (growth < -5) return <TrendingDown className="w-4 h-4 text-red-500" />;
    return <Minus className="w-4 h-4 text-yellow-500" />;
  };

  const getRankBadge = (rank: number) => {
    if (rank === 1) return <Badge className="bg-yellow-500 text-white">ü•á 1</Badge>;
    if (rank === 2) return <Badge className="bg-gray-400 text-white">ü•à 2</Badge>;
    if (rank === 3) return <Badge className="bg-amber-600 text-white">ü•â 3</Badge>;
    return <Badge variant="outline">{rank}</Badge>;
  };

  const filteredRegions = regions.filter(region =>
    region.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="space-y-6">
      <div>
        <h1>–†–µ–π—Ç–∏–Ω–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤ –ë–ê–°</h1>
        <p className="text-muted-foreground">
          –ê–Ω–∞–ª–∏–∑ –ø–æ–ª–µ—Ç–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ —Å—É–±—ä–µ–∫—Ç–∞–º –†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏
        </p>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <Card>
        <CardContent className="pt-6">
          <div className="flex flex-col md:flex-row gap-4">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4" />
              <Input
                placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ä–µ–≥–∏–æ–Ω–∞..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
            <Select value={filterPeriod} onValueChange={setFilterPeriod}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="–ü–µ—Ä–∏–æ–¥" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="week">–ó–∞ –Ω–µ–¥–µ–ª—é</SelectItem>
                <SelectItem value="month">–ó–∞ –º–µ—Å—è—Ü</SelectItem>
                <SelectItem value="quarter">–ó–∞ –∫–≤–∞—Ä—Ç–∞–ª</SelectItem>
                <SelectItem value="year">–ó–∞ –≥–æ–¥</SelectItem>
              </SelectContent>
            </Select>
            <Select value={sortBy} onValueChange={setSortBy}>
              <SelectTrigger className="w-48">
                <SelectValue placeholder="–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="flights">–ü–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª–µ—Ç–æ–≤</SelectItem>
                <SelectItem value="density">–ü–æ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏</SelectItem>
                <SelectItem value="growth">–ü–æ —Ä–æ—Å—Ç—É</SelectItem>
                <SelectItem value="duration">–ü–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </CardContent>
      </Card>

      {/* –¢–æ–ø-3 —Ä–µ–≥–∏–æ–Ω–æ–≤ */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        {regions.slice(0, 3).map((region, index) => (
          <Card key={region.rank} className={`relative overflow-hidden ${
            index === 0 ? 'ring-2 ring-yellow-500' : ''
          }`}>
            <CardHeader className="pb-3">
              <div className="flex items-center justify-between">
                {getRankBadge(region.rank)}
                {getTrendIcon(region.growth)}
              </div>
              <CardTitle className="text-lg">{region.name}</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">–ü–æ–ª–µ—Ç—ã</span>
                  <span className="font-medium">{region.flights.toLocaleString('ru-RU')}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">–ü–ª–æ—Ç–Ω–æ—Å—Ç—å</span>
                  <span className="font-medium">{region.density} –ø/1000–∫–º¬≤</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-muted-foreground">–†–æ—Å—Ç</span>
                  <span className={`font-medium ${
                    region.growth > 0 ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {region.growth > 0 ? '+' : ''}{region.growth}%
                  </span>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* –ü–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Trophy className="w-5 h-5" />
            –ü–æ–ª–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ —Ä–µ–≥–∏–æ–Ω–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b">
                  <th className="text-left p-2">–ú–µ—Å—Ç–æ</th>
                  <th className="text-left p-2">–†–µ–≥–∏–æ–Ω</th>
                  <th className="text-right p-2">–ü–æ–ª–µ—Ç—ã</th>
                  <th className="text-right p-2">–ü–ª–æ—Ç–Ω–æ—Å—Ç—å</th>
                  <th className="text-right p-2">–†–æ—Å—Ç</th>
                  <th className="text-right p-2">–°—Ä. –≤—Ä–µ–º—è</th>
                  <th className="text-right p-2">–ü–∏–∫ –Ω–∞–≥—Ä—É–∑–∫–∏</th>
                  <th className="text-right p-2">–ù—É–ª–µ–≤—ã–µ –¥–Ω–∏</th>
                </tr>
              </thead>
              <tbody>
                {filteredRegions.map((region) => (
                  <tr key={region.rank} className="border-b hover:bg-muted/50">
                    <td className="p-2">
                      {getRankBadge(region.rank)}
                    </td>
                    <td className="p-2">
                      <div className="flex items-center gap-2">
                        <MapPin className="w-4 h-4 text-muted-foreground" />
                        {region.name}
                      </div>
                    </td>
                    <td className="text-right p-2 font-medium">
                      {region.flights.toLocaleString('ru-RU')}
                    </td>
                    <td className="text-right p-2">
                      {region.density}
                    </td>
                    <td className="text-right p-2">
                      <div className="flex items-center justify-end gap-1">
                        {getTrendIcon(region.growth)}
                        <span className={
                          region.growth > 0 ? 'text-green-600' : 
                          region.growth < 0 ? 'text-red-600' : 'text-yellow-600'
                        }>
                          {region.growth > 0 ? '+' : ''}{region.growth}%
                        </span>
                      </div>
                    </td>
                    <td className="text-right p-2">
                      {region.avgDuration} —á
                    </td>
                    <td className="text-right p-2">
                      <div className="flex items-center justify-end gap-1">
                        <Activity className="w-3 h-3 text-muted-foreground" />
                        {region.peakLoad}
                      </div>
                    </td>
                    <td className="text-right p-2">
                      <Badge variant={region.zeroDays === 0 ? 'default' : 'secondary'}>
                        {region.zeroDays}
                      </Badge>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-2xl font-bold">{regions.length}</div>
              <div className="text-sm text-muted-foreground">–ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤</div>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-2xl font-bold">
                {regions.reduce((sum, r) => sum + r.flights, 0).toLocaleString('ru-RU')}
              </div>
              <div className="text-sm text-muted-foreground">–í—Å–µ–≥–æ –ø–æ–ª–µ—Ç–æ–≤</div>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-2xl font-bold">
                {(regions.reduce((sum, r) => sum + r.growth, 0) / regions.length).toFixed(1)}%
              </div>
              <div className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç</div>
            </div>
          </CardContent>
        </Card>
        <Card>
          <CardContent className="pt-6">
            <div className="text-center">
              <div className="text-2xl font-bold">
                {(regions.reduce((sum, r) => sum + r.density, 0) / regions.length).toFixed(1)}
              </div>
              <div className="text-sm text-muted-foreground">–°—Ä–µ–¥–Ω—è—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å</div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}